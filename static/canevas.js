/* Creation du canvas */
var canvas = document.getElementById("canvas1");
const width = (canvas.width = window.innerWidth);
const height = (canvas.height = 500);
const x = 0;
const mushroom_center = width/4;
const mushroom_cap_width = 300;
const mushroom_cap_height_pos = 100;
const mushroom_cap_small_elipse = 40;
const mushroom_stem_height = 400;
const mushroom_stem_width_max = 25;
const mushroom_stem_width_min = 18;
canvas.style.position = 'relative';
canvas.style.zIndex = 1;var ctx0 = canvas.getContext("2d");
var ctx1 = canvas.getContext("2d");
var ctx2 = canvas.getContext("2d");
var ctx3 = canvas.getContext("2d");
var ctx4 = canvas.getContext("2d");
var ctx5 = canvas.getContext("2d");
var ctx6 = canvas.getContext("2d");
var ctx7 = canvas.getContext("2d");
var ctx8 = canvas.getContext("2d");
var ctx9 = canvas.getContext("2d");
var ctx10 = canvas.getContext("2d");
var ctx11 = canvas.getContext("2d");

/* Fonction pour modifier le style des nombres affichés */
function numberWithCommas(x) {
   return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
}

/* Fonction pour generer un entier aleatoire entre 2 valeurs */
function getRandomInt(min, max) {
    const minCeiled = Math.ceil(min);
    const maxFloored = Math.floor(max);
    return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled);
}

/* Creation d'une fonction pour changer la couleur */
function rgb(r, g, b){
return "rgb("+r+","+g+","+b+")";
}

/* Creation de la base du champignon */
ctx2.fillStyle = rgb(46.418288155746154,20.73907362950694,0);
ctx2.strokeStyle = "rgb(0,0,0)";
ctx2.beginPath();
ctx2.moveTo(mushroom_center - mushroom_cap_width/2, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center + mushroom_cap_width/2, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center - mushroom_cap_width/2, mushroom_cap_height_pos);
ctx2.lineWidth = 1;
ctx2.stroke();

/* Creation du chapeau du champignon */
ctx2.strokeStyle = "rgb(0,0,0)";
ctx2.ellipse(mushroom_center, mushroom_cap_height_pos, mushroom_cap_width/2, mushroom_cap_small_elipse, Math.PI, 0, Math.PI);
ctx2.stroke();

/* Creation des cotes du pied */
ctx2.strokeStyle = "rgb(0,0,0)";
ctx2.moveTo(mushroom_center - mushroom_stem_width_max, mushroom_stem_height);
ctx2.bezierCurveTo(mushroom_center - ((5/4)*mushroom_stem_width_max - mushroom_stem_width_min/4), mushroom_cap_height_pos + (8/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center - ((11/8)*mushroom_stem_width_max - mushroom_stem_width_min/2), mushroom_cap_height_pos + (6/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center - mushroom_stem_width_min, mushroom_cap_height_pos + (3/10)*(mushroom_stem_height - mushroom_cap_height_pos));
ctx2.lineTo(mushroom_center - mushroom_stem_width_min, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center + mushroom_stem_width_min, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center + mushroom_stem_width_min, mushroom_cap_height_pos + (3/10)*(mushroom_stem_height - mushroom_cap_height_pos));
ctx2.bezierCurveTo(mushroom_center + ((11/8)*mushroom_stem_width_max - mushroom_stem_width_min/2), mushroom_cap_height_pos + (6/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center + ((5/4)*mushroom_stem_width_max - mushroom_stem_width_min/4), mushroom_cap_height_pos + (8/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center + mushroom_stem_width_max, mushroom_stem_height);
ctx2.bezierCurveTo(mushroom_center + (4/5)*mushroom_stem_width_max, mushroom_stem_height*1.03, mushroom_center + mushroom_stem_width_min, mushroom_stem_height*1.035, mushroom_center, mushroom_stem_height*1.04);
ctx2.bezierCurveTo(mushroom_center - mushroom_stem_width_min, mushroom_stem_height*1.035, mushroom_center - (4/5)*mushroom_stem_width_max, mushroom_stem_height*1.03, mushroom_center - mushroom_stem_width_max, mushroom_stem_height);
ctx2.stroke();
ctx2.fill();

/* Creation de petites taches */
ctx3.fillStyle = "rgb(255,255,255)";
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + -0.18292299362689501, 0.98*mushroom_cap_height_pos + -1.3436572624903644, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 0.16827782927002466, 0.90*mushroom_cap_height_pos + -2.2174582123952717, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 12.159193753056844, 0.98*mushroom_cap_height_pos + -1.6417611294204446, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 11.006511534393804, 0.90*mushroom_cap_height_pos + -1.601078163911081, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 26.940924541764375, 0.98*mushroom_cap_height_pos + -1.308664036547695, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 23.21077428555541, 0.90*mushroom_cap_height_pos + -1.2174618295688382, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 39.88136710260011, 0.98*mushroom_cap_height_pos + -2.41197502863671, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 34.90515508700976, 0.90*mushroom_cap_height_pos + -2.2164829835712805, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 52.30611394470137, 0.98*mushroom_cap_height_pos + -1.8563848916099428, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 45.02789897483603, 0.90*mushroom_cap_height_pos + -1.8832440510820647, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 64.25283396153557, 0.98*mushroom_cap_height_pos + -2.5458790316345956, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 56.511852021227185, 0.90*mushroom_cap_height_pos + -2.048030606207148, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 77.42400901711197, 0.98*mushroom_cap_height_pos + -2.5803948079083208, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 67.94157980992108, 0.90*mushroom_cap_height_pos + -1.1664198548802058, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 91.36105879194788, 0.98*mushroom_cap_height_pos + -2.5795872990088133, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 79.31073841595536, 0.90*mushroom_cap_height_pos + -1.5613515932666442, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 103.51679391345566, 0.98*mushroom_cap_height_pos + -2.3565322535996405, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 92.16853722860897, 0.90*mushroom_cap_height_pos + -2.0246845778180322, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 115.92192313564301, 0.98*mushroom_cap_height_pos + -1.2007932181649414, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 102.06057035043095, 0.90*mushroom_cap_height_pos + -1.2726154552352347, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 130.57305431772647, 0.98*mushroom_cap_height_pos + -1.5162265136810378, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 114.97692103656105, 0.90*mushroom_cap_height_pos + -1.481195624920241, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 142.07342585734014, 0.98*mushroom_cap_height_pos + -1.6248398152339716, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 126.2734339455195, 0.90*mushroom_cap_height_pos + -1.1765336069505787, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 154.85032676958943, 0.98*mushroom_cap_height_pos + -2.3664432313609884, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 137.69017175723312, 0.90*mushroom_cap_height_pos + -1.4835163857222942, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 167.99676351526375, 0.98*mushroom_cap_height_pos + -1.559915890249117, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 149.2650846845545, 0.90*mushroom_cap_height_pos + -2.1047531847292227, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 181.8050115345734, 0.98*mushroom_cap_height_pos + -1.9731761889857597, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 160.74488098683966, 0.90*mushroom_cap_height_pos + -2.103987460980252, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 195.73491216943123, 0.98*mushroom_cap_height_pos + -2.2151459161214584, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 171.99731309679316, 0.90*mushroom_cap_height_pos + -1.1419422609336198, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 207.96032792801142, 0.98*mushroom_cap_height_pos + -1.4358312745791666, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 183.04469655888778, 0.90*mushroom_cap_height_pos + -1.1176344075262816, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 220.91396021478243, 0.98*mushroom_cap_height_pos + -1.7863818329513979, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 195.07393821941935, 0.90*mushroom_cap_height_pos + -2.2125040997296836, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 232.9160115817583, 0.98*mushroom_cap_height_pos + -2.959835899972691, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 205.08013353826018, 0.90*mushroom_cap_height_pos + -1.412576501321593, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 247.40528702171665, 0.98*mushroom_cap_height_pos + -2.0015185985684694, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 217.30346881218833, 0.90*mushroom_cap_height_pos + -1.4870419684839142, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 260.18234247955843, 0.98*mushroom_cap_height_pos + -2.6292852569301646, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 228.5484083553138, 0.90*mushroom_cap_height_pos + -1.2821772208407463, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + -0.2629525695900341, 0.82*mushroom_cap_height_pos + -2.5691250347824255, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 11.130925705840086, 0.82*mushroom_cap_height_pos + -2.2829663448415376, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 24.57454603957677, 0.82*mushroom_cap_height_pos + -1.4411988574394339, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 35.939098929368996, 0.82*mushroom_cap_height_pos + -2.0705665033088496, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 47.138485743638746, 0.82*mushroom_cap_height_pos + -1.372002445165434, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 59.768445740552714, 0.82*mushroom_cap_height_pos + -2.9335558394806593, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 71.42012571554064, 0.82*mushroom_cap_height_pos + -2.9835901815972603, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 83.3161511428673, 0.82*mushroom_cap_height_pos + -1.3272895894274834, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 95.79741925785807, 0.82*mushroom_cap_height_pos + -2.2685096317250926, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 107.93610068204333, 0.82*mushroom_cap_height_pos + -2.5604674216457797, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 119.81550888550726, 0.82*mushroom_cap_height_pos + -1.1649881603505245, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 130.64033152466487, 0.82*mushroom_cap_height_pos + -1.9122599497723827, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 142.1567451553786, 0.82*mushroom_cap_height_pos + -1.5665854468671692, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 155.2976452986047, 0.82*mushroom_cap_height_pos + -1.5772780401505244, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 166.09155692496967, 0.82*mushroom_cap_height_pos + -2.573782297426105, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 178.78395559256725, 0.82*mushroom_cap_height_pos + -1.8534636399847924, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 190.229105054198, 0.82*mushroom_cap_height_pos + -1.9121119503299346, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 201.9224609430205, 0.82*mushroom_cap_height_pos + -2.4797310831530455, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 0.8890355478563083, 0.72*mushroom_cap_height_pos + -2.006570913179065, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 13.576760833695728, 0.72*mushroom_cap_height_pos + -2.32762552482699, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 26.931731617424138, 0.72*mushroom_cap_height_pos + -2.9659288068588507, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 40.16201725856837, 0.72*mushroom_cap_height_pos + -1.5476405130142232, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 52.31711254907459, 0.72*mushroom_cap_height_pos + -1.7586364828390906, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 65.59733806995509, 0.72*mushroom_cap_height_pos + -1.0821538398282087, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 78.9948005460643, 0.72*mushroom_cap_height_pos + -2.2360123775570333, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 91.76307168494567, 0.72*mushroom_cap_height_pos + -1.6885236937788688, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 106.24090231139309, 0.72*mushroom_cap_height_pos + -1.4849104502061605, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 117.92858424622028, 0.72*mushroom_cap_height_pos + -1.0096857116362759, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 131.55411505210753, 0.72*mushroom_cap_height_pos + -2.3169848604170804, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 144.96192690290397, 0.72*mushroom_cap_height_pos + -2.256847620739881, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 159.0634957160554, 0.72*mushroom_cap_height_pos + -1.6439522469095138, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();

/* Creation d'une animation pour afficher la probabilite progressivement */
ctx4.fillStyle = 'rgb(0,0,50)';
ctx4.font = "48px georgia";
var proba_poisonous = 0.5667388439178467;
var textString = "56 %",
    textWidth = ctx3.measureText(textString).width;
var id2 = null;
function myPercentage() {
  var percentage = 0;
   const x2 = 56;
  id4 = setInterval(frame2, 50);
  function frame2() {
    if (percentage < x2) { 
      ctx4.clearRect(2*width/5,200,3*width/4,100);
      percentage += getRandomInt(0.01, 1);
      var textString2 = `${percentage} %`;
          textWidth2 = ctx3.measureText(textString2).width;
      ctx4.fillText(numberWithCommas(textString2),width/2,260);
    } else { 
      ctx4.fillStyle = rgb(255*proba_poisonous*proba_poisonous*proba_poisonous,255*(1-proba_poisonous)*(1-proba_poisonous)*(1-proba_poisonous),0);
      ctx4.clearRect(2*width/5,200,3*width/4,100);
      ctx4.fillText("Poisonous probability",15*width/40,210);
      ctx4.fillText(numberWithCommas(textString),width/2,260);
      if (proba_poisonous > 0.5) { 
          ctx4.fillText("Poisonous",mushroom_center - 110,50);
      } else { 
          ctx4.fillText("Safe",mushroom_center - 45,50);
      }
      clearInterval(id);
    }
  }
}
