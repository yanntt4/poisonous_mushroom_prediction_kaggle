/* Creation du canvas */
var canvas = document.getElementById("canvas1");
const width = (canvas.width = window.innerWidth);
const height = (canvas.height = 500);
const x = 0;
const mushroom_center = width/4;
const mushroom_cap_width = 300;
const mushroom_cap_height_pos = 100;
const mushroom_cap_small_elipse = 40;
const mushroom_stem_height = 400;
const mushroom_stem_width_max = 25;
const mushroom_stem_width_min = 18;
canvas.style.position = 'relative';
canvas.style.zIndex = 1;var ctx0 = canvas.getContext("2d");
var ctx1 = canvas.getContext("2d");
var ctx2 = canvas.getContext("2d");
var ctx3 = canvas.getContext("2d");
var ctx4 = canvas.getContext("2d");
var ctx5 = canvas.getContext("2d");
var ctx6 = canvas.getContext("2d");
var ctx7 = canvas.getContext("2d");
var ctx8 = canvas.getContext("2d");
var ctx9 = canvas.getContext("2d");
var ctx10 = canvas.getContext("2d");
var ctx11 = canvas.getContext("2d");

/* Fonction pour modifier le style des nombres affichés */
function numberWithCommas(x) {
   return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, " ");
}

/* Fonction pour generer un entier aleatoire entre 2 valeurs */
function getRandomInt(min, max) {
    const minCeiled = Math.ceil(min);
    const maxFloored = Math.floor(max);
    return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled);
}

/* Creation d'une fonction pour changer la couleur */
function rgb(r, g, b){
return "rgb("+r+","+g+","+b+")";
}

/* Creation de la base du champignon */
ctx2.fillStyle = rgb(217.59457406209805,0.03483678843588783,0);
ctx2.strokeStyle = "rgb(0,0,0)";
ctx2.beginPath();
ctx2.moveTo(mushroom_center - mushroom_cap_width/2, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center + mushroom_cap_width/2, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center - mushroom_cap_width/2, mushroom_cap_height_pos);
ctx2.lineWidth = 1;
ctx2.stroke();

/* Creation du chapeau du champignon */
ctx2.strokeStyle = "rgb(0,0,0)";
ctx2.ellipse(mushroom_center, mushroom_cap_height_pos, mushroom_cap_width/2, mushroom_cap_small_elipse, Math.PI, 0, Math.PI);
ctx2.stroke();

/* Creation des cotes du pied */
ctx2.strokeStyle = "rgb(0,0,0)";
ctx2.moveTo(mushroom_center - mushroom_stem_width_max, mushroom_stem_height);
ctx2.bezierCurveTo(mushroom_center - ((5/4)*mushroom_stem_width_max - mushroom_stem_width_min/4), mushroom_cap_height_pos + (8/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center - ((11/8)*mushroom_stem_width_max - mushroom_stem_width_min/2), mushroom_cap_height_pos + (6/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center - mushroom_stem_width_min, mushroom_cap_height_pos + (3/10)*(mushroom_stem_height - mushroom_cap_height_pos));
ctx2.lineTo(mushroom_center - mushroom_stem_width_min, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center + mushroom_stem_width_min, mushroom_cap_height_pos);
ctx2.lineTo(mushroom_center + mushroom_stem_width_min, mushroom_cap_height_pos + (3/10)*(mushroom_stem_height - mushroom_cap_height_pos));
ctx2.bezierCurveTo(mushroom_center + ((11/8)*mushroom_stem_width_max - mushroom_stem_width_min/2), mushroom_cap_height_pos + (6/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center + ((5/4)*mushroom_stem_width_max - mushroom_stem_width_min/4), mushroom_cap_height_pos + (8/10)*(mushroom_stem_height - mushroom_cap_height_pos), mushroom_center + mushroom_stem_width_max, mushroom_stem_height);
ctx2.bezierCurveTo(mushroom_center + (4/5)*mushroom_stem_width_max, mushroom_stem_height*1.03, mushroom_center + mushroom_stem_width_min, mushroom_stem_height*1.035, mushroom_center, mushroom_stem_height*1.04);
ctx2.bezierCurveTo(mushroom_center - mushroom_stem_width_min, mushroom_stem_height*1.035, mushroom_center - (4/5)*mushroom_stem_width_max, mushroom_stem_height*1.03, mushroom_center - mushroom_stem_width_max, mushroom_stem_height);
ctx2.stroke();
ctx2.fill();

/* Creation de petites taches */
ctx3.fillStyle = "rgb(255,255,255)";
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + -0.3932442224967363, 0.98*mushroom_cap_height_pos + -1.308129049128384, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + -0.9543845917516565, 0.90*mushroom_cap_height_pos + -1.0107625999236367, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 12.587075888878402, 0.98*mushroom_cap_height_pos + -1.9567483612932468, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 11.753882752214517, 0.90*mushroom_cap_height_pos + -2.164131706860291, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 26.08726306330875, 0.98*mushroom_cap_height_pos + -1.1934338873851202, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 23.028414897529874, 0.90*mushroom_cap_height_pos + -1.2871183934583255, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 38.72199504702309, 0.98*mushroom_cap_height_pos + -2.4485738264856893, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 35.07280708635669, 0.90*mushroom_cap_height_pos + -2.189572438384092, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 51.87580467142935, 0.98*mushroom_cap_height_pos + -2.299259018933368, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 46.40064237643861, 0.90*mushroom_cap_height_pos + -1.350443598023488, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 65.26130448584762, 0.98*mushroom_cap_height_pos + -2.6709960859173516, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 57.906368429181796, 0.90*mushroom_cap_height_pos + -2.8343249011135434, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 78.10567308259375, 0.98*mushroom_cap_height_pos + -1.5921394054977382, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 68.80229603860363, 0.90*mushroom_cap_height_pos + -1.6591324469951303, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 91.30252255921923, 0.98*mushroom_cap_height_pos + -2.1919146779019165, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 80.17224564057068, 0.90*mushroom_cap_height_pos + -2.0455580154463684, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 102.91410696636041, 0.98*mushroom_cap_height_pos + -2.596154779425516, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 90.97286675240605, 0.90*mushroom_cap_height_pos + -2.6886202663513625, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 116.87532802816797, 0.98*mushroom_cap_height_pos + -1.241025998406951, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 103.62098088108854, 0.90*mushroom_cap_height_pos + -2.4315867381023946, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 129.69462410600318, 0.98*mushroom_cap_height_pos + -2.489777827377943, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 114.82098695420713, 0.90*mushroom_cap_height_pos + -2.1871957495317695, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 142.67114286565197, 0.98*mushroom_cap_height_pos + -1.1572715116827743, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 125.35549918133661, 0.90*mushroom_cap_height_pos + -1.4517533759821037, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 155.8501102568041, 0.98*mushroom_cap_height_pos + -2.2378747602991482, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 137.81993957930842, 0.90*mushroom_cap_height_pos + -1.3213486935486236, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 169.65397379990998, 0.98*mushroom_cap_height_pos + -2.2943154559955903, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 147.89635826027677, 0.90*mushroom_cap_height_pos + -1.4529365045389917, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 181.53146238850397, 0.98*mushroom_cap_height_pos + -2.558689282514263, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 159.10668063115386, 0.90*mushroom_cap_height_pos + -1.9943943212308963, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 194.96247154409062, 0.98*mushroom_cap_height_pos + -1.0093817476957, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 171.80259040929647, 0.90*mushroom_cap_height_pos + -2.170077850497929, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 207.05887183137133, 0.98*mushroom_cap_height_pos + -1.9422750644963163, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 183.55569280795663, 0.90*mushroom_cap_height_pos + -1.5468174538606907, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 221.65141112811676, 0.98*mushroom_cap_height_pos + -2.510502245695377, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 194.73981186453037, 0.90*mushroom_cap_height_pos + -2.3848745616764893, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 234.43347280074505, 0.98*mushroom_cap_height_pos + -2.0388999980442613, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 206.67545974999976, 0.90*mushroom_cap_height_pos + -2.757501881978801, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 247.38316046374862, 0.98*mushroom_cap_height_pos + -1.2818604108854985, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 217.24431025089837, 0.90*mushroom_cap_height_pos + -1.8707306121645342, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.2 + 259.11512271780316, 0.98*mushroom_cap_height_pos + -1.5422815800743686, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.5 + 227.87475021905595, 0.90*mushroom_cap_height_pos + -2.9794270985741806, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + -0.36916780872648847, 0.82*mushroom_cap_height_pos + -1.8650622362181326, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 12.518734050401937, 0.82*mushroom_cap_height_pos + -1.377749561785712, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 23.119013844171285, 0.82*mushroom_cap_height_pos + -1.46135736769064, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 35.04859256814843, 0.82*mushroom_cap_height_pos + -2.964955308542492, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 48.222677723001134, 0.82*mushroom_cap_height_pos + -1.255985173367759, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 58.58434540307824, 0.82*mushroom_cap_height_pos + -1.2009648263166868, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 72.05052639001956, 0.82*mushroom_cap_height_pos + -1.4791988699706375, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 82.8145519893042, 0.82*mushroom_cap_height_pos + -1.3060459563260667, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 95.96185964855556, 0.82*mushroom_cap_height_pos + -2.661380642578738, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 106.87800841900062, 0.82*mushroom_cap_height_pos + -2.5529577161489163, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 119.74955249398495, 0.82*mushroom_cap_height_pos + -2.24939463514396, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 130.04832675161256, 0.82*mushroom_cap_height_pos + -1.0059362213113494, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 142.20135331190292, 0.82*mushroom_cap_height_pos + -1.8064239220719178, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 154.72683463063646, 0.82*mushroom_cap_height_pos + -1.680103008344549, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 166.70635406638394, 0.82*mushroom_cap_height_pos + -1.2527761945046605, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 178.01161742274869, 0.82*mushroom_cap_height_pos + -1.1193699466669862, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 190.105056181978, 0.82*mushroom_cap_height_pos + -1.351049675766767, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/2.8 + 202.61830704472789, 0.82*mushroom_cap_height_pos + -2.2623564465345076, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + -0.45951568965552014, 0.72*mushroom_cap_height_pos + -1.145198563761839, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 13.812160482527021, 0.72*mushroom_cap_height_pos + -2.8498879345733563, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 26.63160221789576, 0.72*mushroom_cap_height_pos + -1.1575798965997584, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 38.87356423724769, 0.72*mushroom_cap_height_pos + -2.08254366699759, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 52.0503356344892, 0.72*mushroom_cap_height_pos + -2.2859873909429353, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 66.69766474069493, 0.72*mushroom_cap_height_pos + -1.265159782561807, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 79.32878028713569, 0.72*mushroom_cap_height_pos + -1.3429000721255784, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 92.90549604110424, 0.72*mushroom_cap_height_pos + -2.0574912189975505, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 106.04962297376944, 0.72*mushroom_cap_height_pos + -2.566650271338758, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 118.86718933701479, 0.72*mushroom_cap_height_pos + -1.0376591865293685, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 132.4678202148572, 0.72*mushroom_cap_height_pos + -1.2173645935201833, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 145.51800519251213, 0.72*mushroom_cap_height_pos + -1.4899543326652769, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();
ctx3.beginPath();
ctx3.ellipse(mushroom_center - mushroom_cap_width/3.5 + 157.82832160828625, 0.72*mushroom_cap_height_pos + -1.0988846456085346, 3, 2, 2*Math.PI, 0, 2*Math.PI);
ctx3.stroke();
ctx3.fill();

/* Creation d'une animation pour afficher la probabilite progressivement */
ctx4.fillStyle = 'rgb(0,0,50)';
ctx4.font = "48px georgia";
var proba_poisonous = 0.9484969973564148;
var textString = "94 %",
    textWidth = ctx3.measureText(textString).width;
var id2 = null;
function myPercentage() {
  var percentage = 0;
   const x2 = 94;
  id4 = setInterval(frame2, 50);
  function frame2() {
    if (percentage < x2) { 
      ctx4.clearRect(2*width/5,200,3*width/4,100);
      percentage += getRandomInt(0.01, 1);
      var textString2 = `${percentage} %`;
          textWidth2 = ctx3.measureText(textString2).width;
      ctx4.fillText(numberWithCommas(textString2),width/2,260);
    } else { 
      ctx4.fillStyle = rgb(255*proba_poisonous*proba_poisonous*proba_poisonous,255*(1-proba_poisonous)*(1-proba_poisonous)*(1-proba_poisonous),0);
      ctx4.clearRect(2*width/5,200,3*width/4,100);
      ctx4.fillText("Probabilite de mourir",15*width/40,210);
      ctx4.fillText(numberWithCommas(textString),width/2,260);
      if (proba_poisonous > 0.5) { 
          ctx4.fillText("Empoisonne",mushroom_center - 130,38);
      } else { 
          ctx4.fillText("Comestible",mushroom_center - 110,38);
      }
      clearInterval(id);
    }
  }
}
